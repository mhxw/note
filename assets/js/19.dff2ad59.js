(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{431:function(s,t,e){"use strict";e.r(t);var a=e(11),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),e("p",[s._v("Discourse是一个开源的讨论平台。您可以将Discourse用作邮件列表，讨论论坛或长型聊天室。在本教程中，您将使用Docker在独立的环境中安装Discourse。\nDocker环境中安装Discourse，并配置独立的Nginx和SSL")]),s._v(" "),e("h2",{attrs:{id:"准备环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备环境"}},[s._v("#")]),s._v(" 准备环境")]),s._v(" "),e("ul",[e("li",[s._v("一台至少具有2GB RAM的Ubuntu 18.04服务器，一个sudo非root用户和一个防火墙。")]),s._v(" "),e("li",[s._v("安装nginx")]),s._v(" "),e("li",[s._v("安装Docker")]),s._v(" "),e("li",[s._v("域名的A记录指向部署服务器IP")]),s._v(" "),e("li",[s._v("SMTP 邮件服务器 （本教程中使用QQ邮箱）")])]),s._v(" "),e("h2",{attrs:{id:"下载discourse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载discourse"}},[s._v("#")]),s._v(" 下载Discourse")]),s._v(" "),e("p",[s._v("在下载和安装Discourse之前，请创建/var/discourse目录。这是您所有与Discourse相关的文件所在的位置：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /var/discourse\n")])])]),e("p",[s._v("最后，将官方 "),e("a",{attrs:{href:"https://github.com/discourse/discourse_docker",target:"_blank",rel:"noopener noreferrer"}},[s._v("Discourse Docker Image"),e("OutboundLink")],1),s._v(" 复制到/var/discourse：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/discourse/discourse_docker.git /var/discourse\n")])])]),e("p",[s._v("进入Discourse目录：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /var/discourse\n")])])]),e("p",[s._v("将独立的样本配置文件复制到"),e("code",[s._v("container/app.yml")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" samples/standalone.yml containers/app.yml\n")])])]),e("h2",{attrs:{id:"编辑discourse配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编辑discourse配置"}},[s._v("#")]),s._v(" 编辑Discourse配置")]),s._v(" "),e("p",[s._v("编辑"),e("code",[s._v("container/app.yml")]),s._v("文件：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" containers/app.yml\n")])])]),e("ol",[e("li",[s._v("先修改以下几处内容")])]),s._v(" "),e("p",[s._v("域名修改、SMTP服务器参数修改")]),s._v(" "),e("ul",[e("li",[s._v("gov.mhxw.life：论坛域名")]),s._v(" "),e("li",[s._v("admin@mhxw.life：管理员邮箱")]),s._v(" "),e("li",[s._v("xxxx@foxmail.com：发送信息邮箱")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网站域名")]),s._v("\nDISCOURSE_HOSTNAME: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gov.mhxw.life'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 管理员邮箱")]),s._v("\nDISCOURSE_DEVELOPER_EMAILS: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin@mhxw.life'")]),s._v("\n\nDISCOURSE_SMTP_ADDRESS: smtp.qq.com\nDISCOURSE_SMTP_PORT: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("587")]),s._v("\nDISCOURSE_SMTP_USER_NAME: xxxx@foxmail.com\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# qq邮箱授权码 在qq邮箱=》设置=》账户=》开启smtp服务")]),s._v("\nDISCOURSE_SMTP_PASSWORD:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pwd"')]),s._v("\nDISCOURSE_SMTP_ENABLE_START_TLS: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 发件邮箱：配置文件最底下找这一行")]),s._v("\n- exec: rails r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"SiteSetting.notification_email='xxxx@foxmail.com'\"")]),s._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("注释掉中的所有ssl模板templates")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "templates/web.ssl.template.yml"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "templates/web.letsencrypt.ssl.template.yml"')]),s._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("注释掉所有暴露的端口：")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "80:80"   # http')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "443:443" # https')]),s._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[s._v("添加套接字模板：")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"templates/web.socketed.template.yml"')]),s._v("\n")])])]),e("blockquote",[e("p",[s._v("注意事项\n套接字模板配置文件中也需要配置discourse.conf文件，如果没有按照路径创建一个并配置")])]),s._v(" "),e("p",[e("code",[s._v("web.socketed.template.yml")]),s._v("配置文件如下")]),s._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("file")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /etc/runit/1.d/remove"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("old"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("socket\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("chmod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+x"')]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("contents")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[s._v("\n        #!/bin/bash\n        rm -f /shared/nginx.http*.sock")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("file")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /etc/runit/3.d/remove"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("old"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("socket\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("chmod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+x"')]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("contents")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[s._v("\n        #!/bin/bash\n        rm -rf /shared/nginx.http*.sock")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("filename")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/nginx/conf.d/discourse.conf"')]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /listen 80;/\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("to")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[s._v("\n       listen unix:/shared/nginx.http.sock;\n       set_real_ip_from unix:;")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("filename")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/nginx/conf.d/discourse.conf"')]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /listen 443 ssl http2;/\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("to")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[s._v("\n       listen unix:/shared/nginx.https.sock ssl http2;\n       set_real_ip_from unix:;")]),s._v("\n")])])]),e("p",[s._v("discourse.conf配置文件如下（和下面步骤的nginx.conf配置代码块基本一样）")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  listen "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  server_name gov.mhxw.life"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("301")]),s._v(" https://"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$host")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$request_uri")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nserver "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  listen       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v(" ssl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  server_name  gov.mhxw.life"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  ssl_certificate      /mhxw/nginx/conf/ssl/mhxw.crt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  ssl_certificate_key  /mhxw/nginx/conf/ssl/mhxw.key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  ssl_session_timeout 5m"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#按照这个协议配置")]),s._v("\n  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("aNULL:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("MD5:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("RC4:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("DHE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#按照这个套件配置")]),s._v("\n  ssl_prefer_server_ciphers on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  access_log  /mhxw/nginx/logs/access.log  main"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  error_log  /mhxw/nginx/logs/error.log  debug"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n  location / "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   add_header Content-Security-Policy "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"upgrade-insecure-requests;connect-src *"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      proxy_pass http://unix:/var/discourse/shared/standalone/nginx.http.sock:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      proxy_set_header Host "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      proxy_http_version "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      proxy_set_header X-Forwarded-For "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$proxy_add_x_forwarded_for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      proxy_set_header X-Forwarded-Proto https"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      proxy_set_header X-Real-IP "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$remote_addr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[s._v("以上内容修改好以后，app.yml配置文件如下")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("templates:\n  - "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"templates/postgres.template.yml"')]),s._v("\n  - "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"templates/redis.template.yml"')]),s._v("\n  - "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"templates/web.template.yml"')]),s._v("\n  - "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"templates/web.ratelimited.template.yml"')]),s._v("\n  - "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"templates/web.socketed.template.yml"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Uncomment these two lines if you wish to add Lets Encrypt (https)")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "templates/web.ssl.template.yml"')]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "templates/web.letsencrypt.ssl.template.yml"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## which TCP/IP ports should this container expose?")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## If you want Discourse to share a port with another webserver like Apache or nginx,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## see https://meta.discourse.org/t/17247 for details")]),s._v("\nexpose:\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "80:80"   # http')]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#- "443:443" # https')]),s._v("\n\nparams:\n  db_default_text_search_config: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pg_catalog.english"')]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Set db_shared_buffers to a max of 25% of the total memory.")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## will be set automatically by bootstrap based on detected RAM, or you can override")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#db_shared_buffers: "256MB"')]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## can improve sorting performance, but adds memory usage per-connection")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#db_work_mem: "40MB"')]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Which Git revision should this container use? (default: tests-passed)")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#version: tests-passed")]),s._v("\n\nenv:\n  "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("LANG")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" en_US.UTF-8\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DISCOURSE_DEFAULT_LOCALE: en")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## How many concurrent web requests are supported? Depends on memory and CPU cores.")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## will be set automatically by bootstrap based on detected CPUs, or you can override")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#UNICORN_WORKERS: 3")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## TODO: The domain name this Discourse instance will respond to")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Required. Discourse will not work with a bare IP number.")]),s._v("\n  DISCOURSE_HOSTNAME: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gov.mhxw.life'")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Uncomment if you want the container to be started with the same")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('## hostname (-h option) as specified above (default "$hostname-$config")')]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DOCKER_USE_HOSTNAME: true")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## TODO: List of comma delimited emails that will be made admin and developer")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## on initial signup example 'user1@example.com,user2@example.com'")]),s._v("\n  DISCOURSE_DEVELOPER_EMAILS: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin@mhxw.life'")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## TODO: The SMTP mail server used to validate new accounts and send notifications")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SMTP ADDRESS, username, and password are required")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# WARNING the char '#' in SMTP password can cause problems!")]),s._v("\n  DISCOURSE_SMTP_ADDRESS: smtp.qq.com\n  DISCOURSE_SMTP_PORT: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("587")]),s._v("\n  DISCOURSE_SMTP_USER_NAME: xxxx@foxmail.com\n  DISCOURSE_SMTP_PASSWORD: kknvfghgfqrbcee\n  DISCOURSE_SMTP_ENABLE_START_TLS: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (optional, default true)")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## If you added the Lets Encrypt template, uncomment below to get a free SSL certificate")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#LETSENCRYPT_ACCOUNT_EMAIL: me@example.com")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## The http or https CDN address for this Discourse instance (configured to pull)")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## see https://meta.discourse.org/t/14857 for details")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DISCOURSE_CDN_URL: https://discourse-cdn.example.com")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## The Docker container is stateless; all data is stored in /shared")]),s._v("\nvolumes:\n  - volume:\n      host: /var/discourse/shared/standalone\n      guest: /shared\n  - volume:\n      host: /var/discourse/shared/standalone/log/var-log\n      guest: /var/log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Plugins go here")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## see https://meta.discourse.org/t/19157 for details")]),s._v("\nhooks:\n  after_code:\n    - exec:\n        cd: "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$home")]),s._v("/plugins\n        cmd:\n          - "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/discourse/docker_manager.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Any custom commands to run after building")]),s._v("\nrun:\n  - exec: "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Beginning of custom commands"')]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## If you want to set the 'From' email address for your first registration, uncomment and change:")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## After getting the first signup email, re-comment the line. It only needs to run once.")]),s._v("\n  - exec: rails r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"SiteSetting.notification_email='xxxx@foxmail.com'\"")]),s._v("\n  - exec: "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"End of custom commands"')]),s._v("\n")])])]),e("h2",{attrs:{id:"启动discourse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动discourse"}},[s._v("#")]),s._v(" 启动Discourse")]),s._v(" "),e("p",[s._v("启动引导程序：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("./launcher bootstrap app\n")])])]),e("p",[s._v("引导过程完成后，启动Discourse：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("./launcher start app\n")])])]),e("h2",{attrs:{id:"升级或重新部署discourse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级或重新部署discourse"}},[s._v("#")]),s._v(" 升级或重新部署Discourse")]),s._v(" "),e("p",[s._v("您的Discourse平台现在可以使用了。如果将来需要升级Discourse，则可以从命令行中通过从Git存储库中提取最新版本的代码并重建应用程序来进行升级：")]),s._v(" "),e("blockquote",[e("p",[s._v("注意")]),s._v(" "),e("p",[s._v("升级过程中注意规则的改变，例如升级可能加了新的规则自动删除不活跃的好友，多留意官方动态")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /var/discourse\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ./launcher rebuild app\n")])])]),e("h2",{attrs:{id:"参考链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),e("p",[s._v("https://www.vultr.com/docs/how-to-install-discourse-on-ubuntu-18-04-87257\nhttps://meta.discourse.org/t/running-other-websites-on-the-same-machine-as-discourse/17247\nhttps://meta.discourse.org/t/wanting-to-run-discourse-alongside-apache/125075")])])}),[],!1,null,null,null);t.default=n.exports}}]);