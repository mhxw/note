(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{433:function(s,a,e){"use strict";e.r(a);var t=e(11),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"概要"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[s._v("#")]),s._v(" 概要")]),s._v(" "),e("p",[s._v("Docker 默认安装的情况下，会使用 "),e("code",[s._v("/var/lib/docker/")]),s._v(" 目录作为存储目录，用以存放拉取的镜像和创建的容器等。不过由于此目录一般都位于系统盘，遇到系统盘比较小，而镜像和容器多了后就容易尴尬，这里说明一下如何修改 Docker 的存储目录。")]),s._v(" "),e("h2",{attrs:{id:"docker-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装"}},[s._v("#")]),s._v(" Docker 安装")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("https://docs.docker.com/engine/install/ubuntu/\n")])])]),e("h2",{attrs:{id:"查看docker相关信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看docker相关信息"}},[s._v("#")]),s._v(" 查看Docker相关信息")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker info\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("Client:\n Context:    default\n Debug Mode: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n Plugins:\n  app: Docker App "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Docker Inc., v0.9.1-beta3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  buildx: Build with BuildKit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Docker Inc., v0.5.1-docker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  scan: Docker Scan "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Docker Inc., v0.7.0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nServer:\n Containers: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  Running: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  Paused: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  Stopped: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n Images: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n Server Version: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.10")]),s._v(".6\n Storage Driver: overlay2\n  Backing Filesystem: extfs\n  Supports d_type: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  Native Overlay Diff: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  userxattr: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n Logging Driver: json-file\n Cgroup Driver: cgroupfs\n Cgroup Version: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n Plugins:\n  Volume: "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n  Network: bridge "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" ipvlan macvlan null overlay\n  Log: awslogs fluentd gcplogs gelf journald json-file "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" logentries splunk syslog\nSwarm: inactive\n Runtimes: io.containerd.runc.v2 io.containerd.runtime.v1.linux runc\n Default Runtime: runc\n Init Binary: docker-init\n containerd version: 05f951a3781f4f2c1911b05e61c160e9c30eaa8e\n runc version: 12644e614e25b05da6fd08a38ffa0cfe1903fdec\n init version: de40ad0\n Security Options:\n  apparmor\n  seccomp\n   Profile: default\n Kernel Version: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.15")]),s._v(".0-117-generic\n Operating System: Ubuntu "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("18.04")]),s._v(".5 LTS\n OSType: linux\n Architecture: x86_64\n CPUs: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n Total Memory: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(".65GiB\n Name: mhxw server\n ID: LUSA:YHYP:6LCZ:FUPS:XMG2:YSLR:73V7:724D:3HRD:VWFM:FXXF:NXWU\n Docker Root Dir: /var/lib/docker\n Debug Mode: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n Registry: https://index.docker.io/v1/\n Labels:\n Experimental: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n Insecure Registries:\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.0/8\n Live Restore Enabled: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])])]),e("h2",{attrs:{id:"修改-docker-的默认存储路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改-docker-的默认存储路径"}},[s._v("#")]),s._v(" 修改 Docker 的默认存储路径")]),s._v(" "),e("p",[s._v("官方文档的修改办法是编辑 "),e("code",[s._v("/etc/docker/daemon.json")]),s._v(" 文件：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/docker/daemon.json\n")])])]),e("p",[s._v("默认情况下这个配置文件是没有的，这里实际也就是新建一个，然后写入以下内容：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data-root"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/mhxw/docker"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[s._v("此文件还涉及默认源的设定，如果设定了国内源，那么实际就是在源地址下方加一行，写成：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://hub-mirror.c.163.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data-root"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/mhxw/docker"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[s._v("保存退出，然后重启 docker 服务：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("systemctl restart docker\n")])])]),e("p",[s._v("再次查看 docker 信息，可以看到目录已经变成了设定的"),e("code",[s._v("/mhxw/docker")]),s._v(":")]),s._v(" "),e("h2",{attrs:{id:"docker-安装-mysql8-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装-mysql8-0"}},[s._v("#")]),s._v(" Docker 安装 MySQL8.0")]),s._v(" "),e("ul",[e("li",[s._v("docker 仓库拉取mysql8.0")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker pull mysql:8.0\n")])])]),e("ul",[e("li",[s._v("查看本地仓库镜像是否下载成功")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker images\n")])])]),e("ul",[e("li",[s._v("安装运行mysql8.0")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run -p 本地主机端口号:容器服务端口号 --name 容器名字 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-e 配置信息修改"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -d 镜像名字\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("44377")]),s._v(":3306 --name mysql8.0 -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root -d mysql:8.0\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);